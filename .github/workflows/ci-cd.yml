name: CI/CD Build & Deploy Atmosphere

on:
  push:
    branches: [ main ]

env:
  GCP_REGION: asia-southeast2
  ARTIFACT_REPO: openstack-images
  CLUSTER_NAME: gke-openstack
  ZONE: asia-southeast2-a

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Membuat Artifact Registry
        run: |
          if ! gcloud artifacts repositories describe ${ARTIFACT_REPO} --location=${GCP_REGION} >/dev/null 2>&1; then
            echo "[INFO] Repository ${ARTIFACT_REPO} belum ada. Membuat..."
            gcloud artifacts repositories create ${ARTIFACT_REPO} \
              --repository-format=docker \
              --location=${GCP_REGION} \
              --description="Docker images for Atmosphere"
          else
            echo "[INFO] Repository ${ARTIFACT_REPO} sudah ada."
          fi
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${GCP_REGION}-docker.pkg.dev -q

      - name: Build Atmosphere image
        run: |
          docker build -t ${GCP_REGION}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${ARTIFACT_REPO}/atmosphere:latest ./k8s/atmosphere
          docker push ${GCP_REGION}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${ARTIFACT_REPO}/atmosphere:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${CLUSTER_NAME} --zone ${ZONE} --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy Atmosphere manifests
        run: |
          kubectl apply -f k8s/atmosphere/deployment.yaml
          kubectl apply -f k8s/atmosphere/service.yaml
